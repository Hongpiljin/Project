<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.UserReportMapper">
	<resultMap type="dto.CommentReportDTO" id="comment">
		<id column="report_number" property="reportNumber" />
		<result column="comment_number" property="commentNumber" />
		<result column="user_number" property="userNumber" />
		<result column="report_status" property="reportStatus" />
		<result column="create_time" property="createTime" />
		<result column="handled_by_admin_id"
			property="handledByAdminId" />
		<result column="comment_report_reason"
			property="commentReportReason" />
		<result column="comment_writer"
			property="commentWriterNickname" />
		<result column="reporter" property="userNickname" />
	</resultMap>

	<select id="selectAllReports" resultType="dto.UserReportDTO">
		SELECT
		ur.REPORT_NUMBER AS reportNumber,
		ur.USER_NUMBER AS userNumber,
		ur.POST_NUMBER AS postNumber,
		ur.USER_REPORT_REASON AS userReportReason,
		ur.REPORT_STATUS AS reportStatus,
		TO_CHAR(ur.CREATE_TIME, 'YYYY-MM-DD HH24:MI:SS') AS createTime,
		COALESCE(ur.HANDLED_BY_ADMIN_ID, 0) AS handledByAdminId,
		bu.NICK_NAME AS postWriterNickname,
		u.NICK_NAME AS userNickname
		FROM
		USER_REPORTS ur LEFT JOIN BOARDS b ON ur.POST_NUMBER = b.POST_NUMBER
		LEFT JOIN USERS u ON ur.USER_NUMBER = u.USER_NUMBER
		LEFT JOIN USERS bu ON b.USER_NUMBER = bu.USER_NUMBER
		ORDER BY ur.CREATE_TIME DESC
	</select>

	<insert id="insertReport" parameterType="dto.UserReportDTO">
		INSERT INTO USER_REPORTS
		(REPORT_NUMBER, USER_NUMBER, POST_NUMBER,
		USER_REPORT_REASON,
		REPORT_STATUS, CREATE_TIME)
		VALUES (SEQ_REPORT_NUMBER.NEXTVAL,
		#{userNumber}, #{postNumber},
		#{userReportReason}, 'PENDING',
		SYSTIMESTAMP)
	</insert>

	<update id="updateReportStatus" parameterType="map">
		UPDATE
		USER_REPORTS
		SET REPORT_STATUS = #{status},
		HANDLED_BY_ADMIN_ID =
		#{adminId}
		WHERE REPORT_NUMBER = #{reportNumber}
	</update>
	<!-- 댓글 신고 -->
	<insert id="insertCommentReport"
		parameterType="dto.CommentReportDTO">
		insert into comment_reports(report_number,
		comment_number, user_number,
		comment_report_reason)
		values
		(comment_reports_report_number_seq.nextval, #{commentNumber},
		#{userNumber}, #{commentReportReason})
	</insert>
	<!-- 댓글 신고 목록 조회 -->
	<select id="selectCommentReports" resultMap="comment">
		select * from
		CommentReportView
		ORDER BY report_number DESC
	</select>
	<update id="updateCommentReportStatus" parameterType="map">
		UPDATE COMMENT_REPORTS
		SET REPORT_STATUS = #{status},
		HANDLED_BY_ADMIN_ID = #{adminId}
		WHERE REPORT_NUMBER = #{reportNumber}
	</update>
		<!--  여기서부터 추가함  -->
	<!-- 전체 신고 수 조회 -->
<select id="getTotalReportCount" resultType="int">
    SELECT COUNT(*)
    FROM USER_REPORTS
</select>

<!-- 특정 회원의 신고 수 조회 -->
<select id="getTotalReportCountByMemberId" parameterType="int" resultType="int">
    SELECT COUNT(*)
    FROM USER_REPORTS
    WHERE USER_NUMBER = #{memberId}
</select>

<!-- 페이징된 전체 신고 목록 조회 -->
<select id="findReportsWithPagination" parameterType="map" resultType="dto.UserReportDTO">
    SELECT *
    FROM (
        SELECT
            ur.REPORT_NUMBER AS reportNumber,
            ur.USER_NUMBER AS userNumber,
            ur.POST_NUMBER AS postNumber,
            ur.USER_REPORT_REASON AS userReportReason,
            ur.REPORT_STATUS AS reportStatus,
            TO_CHAR(ur.CREATE_TIME, 'YYYY-MM-DD HH24:MI:SS') AS createTime,
            COALESCE(ur.HANDLED_BY_ADMIN_ID, 0) AS handledByAdminId,
            COALESCE(bu.NICK_NAME, 'Unknown') AS postWriterNickname,
            COALESCE(u.NICK_NAME, 'Unknown') AS userNickname,
            ROW_NUMBER() OVER (ORDER BY ur.CREATE_TIME DESC) AS rn
        FROM USER_REPORTS ur
        LEFT JOIN BOARDS b ON ur.POST_NUMBER = b.POST_NUMBER
        LEFT JOIN USERS u ON ur.USER_NUMBER = u.USER_NUMBER
        LEFT JOIN USERS bu ON b.USER_NUMBER = bu.USER_NUMBER
    )
    WHERE rn BETWEEN #{start} AND #{end}
</select>

<!-- 특정 회원의 페이징된 신고 목록 조회 -->
<select id="findReportsByMemberIdWithPagination" parameterType="map" resultType="dto.UserReportDTO">
    SELECT *
    FROM (
        SELECT
            ur.REPORT_NUMBER AS reportNumber,
            ur.USER_NUMBER AS userNumber,
            ur.POST_NUMBER AS postNumber,
            ur.USER_REPORT_REASON AS userReportReason,
            ur.REPORT_STATUS AS reportStatus,
            TO_CHAR(ur.CREATE_TIME, 'YYYY-MM-DD HH24:MI:SS') AS createTime,
            COALESCE(ur.HANDLED_BY_ADMIN_ID, 0) AS handledByAdminId,
            COALESCE(bu.NICK_NAME, 'Unknown') AS postWriterNickname,
            COALESCE(u.NICK_NAME, 'Unknown') AS userNickname,
            ROW_NUMBER() OVER (ORDER BY ur.CREATE_TIME DESC) AS rn
        FROM USER_REPORTS ur
        LEFT JOIN BOARDS b ON ur.POST_NUMBER = b.POST_NUMBER
        LEFT JOIN USERS u ON ur.USER_NUMBER = u.USER_NUMBER
        LEFT JOIN USERS bu ON b.USER_NUMBER = bu.USER_NUMBER
        WHERE ur.USER_NUMBER = #{memberId}
    )
    WHERE rn BETWEEN #{start} AND #{end}
</select>
	
		
</mapper>